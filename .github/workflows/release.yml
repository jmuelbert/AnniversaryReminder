    release-build-version:
        runs-on: windows-latest
        needs: build
        if: github.repository_owner == 'jmuelbert' && github.ref == 'refs/heads/master'
        strategy:
            fail-fast: false
        steps:
            - name: Setup dotnet 5.0.x sdk
              uses: actions/setup-dotnet@v1.7.2
              with:
                  dotnet-version: 5.0.100-preview.7.20366.6

            - name: Check dotnet sdk install
              run: dotnet --info

            - name: Download Artefact
              uses: actions/download-artifact@v2.0.7
              with:
                  name: "drop-ci-packages"

            - name: Add myget nuget source
              run: dotnet nuget add source https://www.myget.org/F/jmuelbert/api/v2/package --name myget.org

            - name: Push myget package
              run: dotnet nuget push .\drop-ci-packages\*.nupkg -s myget.org -k $env:MYGET_API_TOKEN --skip-duplicate

            - name: Add github nuget source
              run: dotnet nuget add source https://nuget.pkg.github.com/jmuelbert/index.json --name github.com --username jmuelbert --password $env:GITHUB_TOKEN

            - name: Push github package
              run: |
                  $count = 0;
                  do
                  {
                      ++$count;
                      dotnet nuget push .\drop-ci-packages\*.nupkg -s github.com --skip-duplicate;
                  }
                  while ($count -lt 3 -and $LastExitCode -ne 0)
                  $LastExitCode = 0;

            - name: Microsoft Application Inspector
              uses: microsoft/ApplicationInspector-Action@v1
              with:
                  name: AppInspectorResults
                  path: AppInspectorResults.json
